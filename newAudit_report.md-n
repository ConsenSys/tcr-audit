# newAudit Audit Report by ConsenSys Diligence


<!--
Nothing should go into this file except maybe general COMMENTS, ROLES and this TODO list

TODOs:

* 

## Roles:

* GNSPS:
* Joseph:
* John:

 -->

<!-- Please don't change these comments -->
<!-- MarkdownTOC -->
	- [1 - Introduction](#1---introduction)
		- [1.1 - Audit Goals](#1-1---audit-goals)
		- [1.2 - Summary](#1-2---summary)
		- [1.3 - Materials Included in Audit](#1-3---materials-included-in-audit)
	- [2 - General Findings](#2---general-findings)
		- [2.1 - Critical](#2-1---critical)
		- [2.2 - Major](#2-2---major)
		- [2.3 - Medium](#2-3---medium)
		- [2.4 - Minor](#2-4---minor)
	- [3 - Specific Findings](#3---specific-findings)
		- [2.1 - Critical](#2-1---critical)
		- [2.2 - Major](#2-2---major)
		- [2.3 - Medium](#2-3---medium)
		- [2.4 - Minor](#2-4---minor)
	- [5 - Test Coverage Analysis](#5---test-coverage-analysis)
	- [Appendix 1 - Audit Participants](#appendix-1---audit-participants)
	- [Appendix 2 - Terminology](#appendix-2---terminology)
		- [A.2.1 - Coverage](#a-2-1---coverage)
		- [A.2.2 - Severity](#a-2-2---severity)
	- [Appendix 3 - Audit Details](#appendix-3---audit-details)
		- [A.3.1 - File List](#a-3-1---file-list)
		- [A.3.2 - Static Analysis of Project's Files](#a-3-2---static-analysis-of-project-s-files)
<!--EP-->
<!-- /MarkdownTOC -->
<!-- Please don't change these comments -->


## 1 - Introduction

### 1.1 - Audit Goals

The focus of our audit was to ensure the following properties:

**Security**:
identifying security related issues within each
contract and within the system of contracts.

**Sound Architecture**:
evaluation of the architecture of this system through the lens of established smart contract best practices and general software best practices.

**Code Correctness and Quality**:
a full review of the contract source code.  The primary areas of focus include:

* Correctness (does it do was it is supposed to do)
* Readability (How easily it can be read and understood)
* Sections of code with high complexity
* Improving scalability
* Quantity and quality of test coverage


### 1.2 - Summary

#### General Overview of Contract System




#### Overview of Findings




### 1.3 - Materials Included in Audit

#### Documentation




#### Dynamic Tests




#### Source Code




## 2 - General Findings

### 2.1 - Critical

#### X.X.X - Issue Template

<!-- NOTE: The name of the issue is going to be exactly the same as the name of this file! -->

* <link to issue in the official project repo (optional)>

<corpus of the issue>

#### Recommendation

<corpus of the recommendation>

#### Resolution

* <link to a related pull request in the official project repo (optional)>

<small corpus explaining the actual changes made to fix it>


### 2.2 - Major

#### X.X.X - Issue Template

<!-- NOTE: The name of the issue is going to be exactly the same as the name of this file! -->

* <link to issue in the official project repo (optional)>

<corpus of the issue>

#### Recommendation

<corpus of the recommendation>

#### Resolution

* <link to a related pull request in the official project repo (optional)>

<small corpus explaining the actual changes made to fix it>


### 2.3 - Medium

#### X.X.X - Issue Template

<!-- NOTE: The name of the issue is going to be exactly the same as the name of this file! -->

* <link to issue in the official project repo (optional)>

<corpus of the issue>

#### Recommendation

<corpus of the recommendation>

#### Resolution

* <link to a related pull request in the official project repo (optional)>

<small corpus explaining the actual changes made to fix it>


### 2.4 - Minor

#### X.X.X - Issue Template

<!-- NOTE: The name of the issue is going to be exactly the same as the name of this file! -->

* <link to issue in the official project repo (optional)>

<corpus of the issue>

#### Recommendation

<corpus of the recommendation>

#### Resolution

* <link to a related pull request in the official project repo (optional)>

<small corpus explaining the actual changes made to fix it>


## 3 - Specific Findings

### 2.1 - Critical

#### X.X.X - Issue Template

<!-- NOTE: The name of the issue is going to be exactly the same as the name of this file! -->

* <link to issue in the official project repo (optional)>

<corpus of the issue>

#### Recommendation

<corpus of the recommendation>

#### Resolution

* <link to a related pull request in the official project repo (optional)>

<small corpus explaining the actual changes made to fix it>


### 2.2 - Major

#### X.X.X - Issue Template

<!-- NOTE: The name of the issue is going to be exactly the same as the name of this file! -->

* <link to issue in the official project repo (optional)>

<corpus of the issue>

#### Recommendation

<corpus of the recommendation>

#### Resolution

* <link to a related pull request in the official project repo (optional)>

<small corpus explaining the actual changes made to fix it>


### 2.3 - Medium

#### X.X.X - Issue Template

<!-- NOTE: The name of the issue is going to be exactly the same as the name of this file! -->

* <link to issue in the official project repo (optional)>

<corpus of the issue>

#### Recommendation

<corpus of the recommendation>

#### Resolution

* <link to a related pull request in the official project repo (optional)>

<small corpus explaining the actual changes made to fix it>


### 2.4 - Minor

#### X.X.X - Issue Template

<!-- NOTE: The name of the issue is going to be exactly the same as the name of this file! -->

* <link to issue in the official project repo (optional)>

<corpus of the issue>

#### Recommendation

<corpus of the recommendation>

#### Resolution

* <link to a related pull request in the official project repo (optional)>

<small corpus explaining the actual changes made to fix it>


## 5 - Test Coverage Analysis




## Appendix 1 - Audit Participants

Security audit was performed by ConsenSys team members <members>.


## Appendix 2 - Terminology

### A.2.1 - Coverage

Measurement of the degree to which the source code is executed by the test suite.


#### A.2.1.1 - untested

No tests.


#### A.2.1.2 - low

The tests do not cover some set of non-trivial functionality.


#### A.2.1.3 - good

The tests cover all major functionality.


#### A.2.1.4 - excellent

The tests cover all code paths.


### A.2.2 - Severity

Measurement of magnitude of an issue.


#### A.2.2.1 - minor

Minor issues are generally subjective in nature, or potentially deal with
topics like "best practices" or "readability".  Minor issues in general will
not indicate an actual problem or bug in code.

The maintainers should use their own judgement as to whether addressing these
issues improves the codebase.


#### A.2.2.2 - medium

Medium issues are generally objective in nature but do not represent actual
bugs or security problems.

These issues should be addressed unless there is a clear reason not to.


#### A.2.2.3 - major

Major issues will be things like bugs or security vulnerabilities.  These
issues may not be directly exploitable, or may require a certain condition to
arise in order to be exploited.

Left unaddressed these issues are highly likely to cause problems with the
operation of the contract or lead to a situation which allows the system to be
exploited in some way.


#### A.2.2.4 - critical

Critical issues are directly exploitable bugs or security vulnerabilities.

Left unaddressed these issues are highly likely or guaranteed to cause major
problems or potentially a full failure in the operations of the contract.


## Appendix 3 - Audit Details

### A.3.1 - File List

The following source files were included in the audit.

<link_to_frozen_commit>

* <file name #1>
* <file name #2>
* ...


### A.3.2 - Static Analysis of Project's Files

#### A.4.2.1 - File Count

The number of solidity files present in the project is:

```
$ find . -name '*.sol' | wc -l

<command output>
```


#### A.4.2.2 - LOC Count

The number of LOC present in the project is:

```
$ find . -name '*.sol' | xargs wc -l

<command output>
```


#### A.4.2.3 - ABI Inspection

How many functions are there in the project's contracts? (please see _Notes_ below)

```
<matching command output>
```

How many state-changing functions are there in the project?

```
<matching command output>
```

NIX command used to generate these statistic:

```
**output the ABI to a file using solc**
$ solc --abi contracts/*.sol > abi.json

**how many functions are there?**
$ cat abi.json | grep -o \"type\":\"function\" | wc -l

**how many functions are state changing?**
$ cat abi.json | grep -o \"constant\":false | wc -l
```


#### A.4.2.4 - External Call Count

How many external calls are there in the project?

```
<command output>
```

NIX command used for the statistic:

```
egrep '\.\w*\(.*\)' contracts/* -nr
```


